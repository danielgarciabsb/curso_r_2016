resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
for( i in 1:1000){
erros <- rnorm(16,0,1)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
for( i in 1:1000){
erros <- rnorm(16,0,1)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
for( i in 1:1000){
erros <- rnorm(16,0,1)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
for( i in 1:1000){
erros <- rnorm(16,0,1)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
for( i in 1:1000){
erros <- rnorm(16,0,1)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
y
for( i in 1:1000){
erros <- rnorm(16,0,6)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
yfaltante <- y[-1]
bloc <- factor(rep(c(1,2,3,4),4))
trat <- factor(rep(c(1,2,3,4),each=4))
yfaltante <- y[-1]
blocfaltante <- bloc[-1]
tratfaltante <- trat[-1]
mod1 <- aov(yfaltante ~ blocfaltante + tratfaltante)
mod2 <- aov(yfaltante ~ tratfaltante + blocfaltante)
summary(mod1)
summary(mod2)
medbloc <- tapply(yfaltante,blocfaltante,mean)
sum(3*(medbloc[1] - mediageral)^2+
4*(medbloc[2] - mediageral)^2+
4*(medbloc[3] - mediageral)^2+
4*(medbloc[4] - mediageral)^2)
mediageral <- mean(yfaltante)
sum(3*(medbloc[1] - mediageral)^2+
4*(medbloc[2] - mediageral)^2+
4*(medbloc[3] - mediageral)^2+
4*(medbloc[4] - mediageral)^2)
summary(mod1)
medtrat <- tapply(yfaltante,tratfaltante,mean)
sum(3*(medtrat[1] - mediageral)^2+
4*(medtrat[2] - mediageral)^2+
4*(medtrat[3] - mediageral)^2+
4*(medtrat[4] - mediageral)^2)
summary(mod1)
summary(mod2)
sum((mod1$fitted.values-mediageral)^2)
sqmod1 <- sum((mod1$fitted.values-mediageral)^2)
modbloc <- aov(yfaltante ~ blocfaltante)
sqmod1 <- sum((mod1$fitted.values-mediageral)^2)
modbloc <- aov(yfaltante ~ blocfaltante)
sqmodbloc <- sum((modbloc$fitted.values-mediageral)^2)
sqmod1 - sqmodbloc
summary(mod1)
somatrat <- tapply(yfaltante,tratfaltante,sum)
somabloc <- tapply(yfaltante,blocfaltante,sum)
somatotal <- sum(yfaltante)
pimput <- (4*somabloc[1] + 4*somatrat[1] + somatotal)/((4-1)*(4-1))
pimput
y[1]
y
somatrat
somab
somabloc
yimput <-c(pimput,y)
modimput <- aov(yimput ~ bloc + trat)
bloc
yimput <-c(pimput,y)
yimput
length(yimput)
yimput <-c(pimput,yfaltante)
modimput <- aov(yimput ~ bloc + trat)
summary(modimput)
summary(modimput)[[1]][[2]][2]
summary(modimput)[[1]][[2]][2] - 3/2*(pimput-(somabloc[1]/3))^2
pimput <- (4*somabloc[1] + 4*somatrat[1] - somatotal)/((4-1)*(4-1))
pimput
y[1]
yimput <-c(pimput,yfaltante)
modimput <- aov(yimput ~ bloc + trat)
summary(modimput)[[1]][[2]][2]
summary(modimput)[[1]][[2]][2] - 3/4*(pimput-(somabloc[1]/3))^2
summary(mod1)
summary(modimput)
summary(mod1)
summary(modbloc)
summary(modbloc)[[1]][[2]][2] - summary(modimput)[[1]][[2]][3]
summary(mod1)
betas <- rep(c(5,5,-10,0),4)
taus <- rep(c(1,1,-1,-1),each=4)
mu <- rep(50,16)
resultados <- c()
set.seed(577)
for( i in 1:1000){
erros <- rnorm(16,0,6)
y <- mu + taus + betas + erros
mat1 <- matrix(y,nrow=4)
teste <- tukey.test(mat1)
resultados[i] <- teste$stat > teste$critical.value
}
mean(resultados)
##parcela perdida
bloc <- factor(rep(c(1,2,3,4),4))
trat <- factor(rep(c(1,2,3,4),each=4))
yfaltante <- y[-1]
blocfaltante <- bloc[-1]
tratfaltante <- trat[-1]
mod1 <- aov(yfaltante ~ blocfaltante + tratfaltante)
mod2 <- aov(yfaltante ~ tratfaltante + blocfaltante)
summary(mod1)
summary(modimput)
rnorm(10)
rnorm(10)
set.seed(12345)
rnrom(10)
rnorm(10)
set.seed(12345)
rnorm(10)
vetor1 <- rnorm(10)
vetor1
vetor1[2]
vet <- c(1,2,3,4,5)
vet[1]
vet[-1]
mod1
summary(mod1)
summary(mod1)[[1]]
summary(mod1)[[1]][[2]]
summary(mod1)[[1]][2]
summary(mod1)[[1]][2][3]
summary(mod1)[[1]][[2]]
summary(mod1)[[1]][[2]][3]
media <- (4*126+5*359+6*1658+7*4764)/6907
media
variancia <- ((4-6.6)^2*126+(5-6.6)^2*359+(6-6.6)^2*1658+(7-6.6)^2*4764)/6907
variancia
7-media
anos <- c(2,3,4,5,4,6,7,8,8,10)
mean(anos)
var(anos)*9/10
clientes <- c(48,50,56,52,43,69,62,58,64,72)
mean(clientes)
sort(clientes)
sort(anos)
anos*clientes-10*mean(anos)*mean(clientes)
sum(anos*clientes)-10*mean(anos)*mean(clientes)
(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova<-(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova
cova/(sqrt(var(clientes)*9/10)*sqrt(var(anos)*9/10))
observ <- c(30,35,35,60,25,15)
esp <- c(100*90/200,100*60/200,100*50/200,100*90/200,100*60/200,100*50/200)
esp
sum((observ-esp)^2/esp)
.7*300
400*.3
120+90-400
obser <- c(120,80,190,310,90,210)
esper <- c(200*400/1000,200*600/1000,500*400/1000,500*600/1000,300*400/1000,300*600/1000)
esper
sum((esper-obser)^2/esper)
97+19
97+18
filhos <- c(rep(0,43),rep(1,18),rep(2,57),rep(3,82),rep(4,50))
casame <- c(rep(0,12),rep(1,21),rep(2,10),rep(1,115),rep(2,42),rep(1,30),rep(2,20))
length(filhos)
length(casame)
mean(casme)
mean(casame)
mean(filhos)
var(casame)*249/250
var(filhos)*249/250
(sum(filhos*casame)-250*mean(casame)*mean(filhos))/250
cova <- (sum(filhos*casame)-250*mean(casame)*mean(filhos))/250
cova
cova/sqrt(var(casame)*249/250*var(filhos)*249/250)
dbinom(4,.1,5)
dbinom(4,5,.1)
-10/6
filhos <- c(rep(0,43),rep(1,18),rep(2,57),rep(3,82),rep(4,50))
casame <- c(rep(0,12),rep(1,21),rep(2,10),rep(1,115),rep(2,42),rep(1,30),rep(2,20))
mean(casame)
mean(filhos)
var(casame)*249/250
var(filhos)*249/250
cova <- (sum(filhos*casame)-250*mean(casame)*mean(filhos))/250
cova
cova/sqrt(var(casame)*249/250*var(filhos)*249/250)
media <- (4*126+5*359+6*1658+7*4764)/6907
media
variancia <- ((4-6.6)^2*126+(5-6.6)^2*359+(6-6.6)^2*1658+(7-6.6)^2*4764)/6907
variancia
anos <- c(2,3,4,5,4,6,7,8,8,10)
mean(anos)
var(anos)*9/10
sqrt(var(anos)*9/10)
clientes <- c(48,50,56,52,43,69,62,58,64,72)
mean(clientes)
var(clientes)*9/10
sqrt(var(clientes)*9/10)
sort(anos)
sort(clientes)
cova<-(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova
cova/(sqrt(var(clientes)*9/10)*sqrt(var(anos)*9/10))
var(clientes)*9/10
cova<-(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova
cova/(sqrt(var(clientes)*9/10)*sqrt(var(anos)*9/10))
observ <- c(30,35,35,60,25,15)
esp <- c(100*90/200,100*60/200,100*50/200,100*90/200,100*60/200,100*50/200)
esp
sum((observ-esp)^2/esp)
clientes <- c(48,50,56,52,43,60,62,58,64,72)
mean(clientes)
var(clientes)*9/10
sqrt(var(clientes)*9/10)
sort(anos)
sort(clientes)
cova<-(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova
cova/(sqrt(var(clientes)*9/10)*sqrt(var(anos)*9/10))
observ <- c(30,35,35,60,25,15)
esp <- c(100*90/200,100*60/200,100*50/200,100*90/200,100*60/200,100*50/200)
esp
sum((observ-esp)^2/esp)
anos <- c(2,3,4,5,4,6,7,8,8,10)
mean(anos)
var(anos)*9/10
sqrt(var(anos)*9/10)
clientes <- c(48,50,56,52,43,60,62,58,64,72)
mean(clientes)
var(clientes)*9/10
sqrt(var(clientes)*9/10)
cova<-(sum(anos*clientes)-10*mean(anos)*mean(clientes))/10
cova
cova/(sqrt(var(clientes)*9/10)*sqrt(var(anos)*9/10))
var(anos)*9/10
1:5
5:1
jabuticaba <- 6:10
jabuticaba
jabuticaba[3]
jabuticaba[c(2,3,5)]
jabuticaba[-1]
vetornovo <- jabuticaba[-1]
vetornovo
ls()
jabuticaba
jabuticaba[c(F,F,T,T,F)]
jabuticaba[c(F,T)]
jabuticaba[c(T,F)]
exemplo <- rpois(5,100)
exemplo
set.seed(123)
exemplo <- rpois(5,100)
exemplo
exemplo <- rpois(5,100)
exemplo
set.seed(123)
exemplo <- rpois(5,100)
exemplo
exemplo[3,1,4,2,5]
exemplo[c(3,1,4,2,5)]
order(exemplo)
exemplo[order(exemplo)]
exemplo1 <- exemplo[c(3,1,4,2,5)]
exemplo1
exemplo
sort(exemplo)
?sort
sort(exemplo,decreasing = TRUE)
order(exemplo)
order(exemplo,decreasing = TRUE)
exemplo
exemplo<100
exemplo[exemplo<100]
exemplo
exemplo[-1]
exemplo[-c(1,2)]
mat1 <- matrix(1:9,norw=3)
mat1 <- matrix(1:9,nrow=3)
mat1
mat1 <- matrix(1:9,ncol=3)
?matrix
mat1 <- matrix(1:9,ncol=3, byrow=TRUE)
mat1
mat1 <- matrix(ncol=3, byrow=TRUE, 1:9)
mat1
mat1[2,3]
mat1[3,]
mat1[,2]
mat1[-3,]
mat[3]
mat1[3]
mat1
as.numeric(mat1)
mat2 <- matrix(rpois(9,100),nrow=3)
set.seed(999)
mat2 <- matrix(rpois(9,100),nrow=3)
mat2
mat2[c(3,1,2),]
mat2[,3]
order(mat2[,3])
mat2[order(mat2[,3]), ]
mat2[order(mat2[,3]),]
mat2
mat2+1000
mat2 + c(1000,2000,3000)
t(mat2)
log(mat2)
round(log(mat2),2)
mat2
t(mat2)
logmat2 <- log(mat2)
logmat2
mat2
mat2 <- log(mat2)
mat2
exp(mat2)
mat3 <- matrix(1:9,nrow=3)
mat3 <- matrix(1:9,nrow=3)
mat4 <- matrix((1:9)*1000,nrow=3)
mat3
mat4
mat3+mat4
mat3 * mat4
mat3 %*% mat4
mat3 %*% mat4
mat1 < 1000
letters(9)
letters
letters[1:9]
matrix(letters[1:9],nrow=3)
matrix(c(letters[1:8],1000),nrow=3)
notas <- c(10,7,3,5)
nomes <- c("ana", "bia", "edu", "joao")
cotista <- c(T,F,T,F)
alunos <- data.frame(nomes,notas,cotista)
alunos
alunos[3,]
alunos[,2]
alunos$notas
alunos[,'notas']
alunos$nomes
?data.frame
alunos <- data.frame(nomes,notas,cotista,stringsAsFactors = FALSE)
alunos$nomes
sexo <- c("F","F","M","M")
alunos <- data.frame(nomes,notas,cotista,sexo)
alunos$se
alunos
alunos[,c(1,2)]
alunos[,c('nomes','notas')]
alunos[,c("nomes","notas")]
alunos$sexo
alunos$sexo$cotista
alunos
alunos[c(1,2,4,3), ]
order(alunos$notas,decreasing = T)
alunos[order(alunos$notas,decreasing = T), ]
alunos
alunos[c(1,3),]
alunos[c(T,F,T,F),]
alunos[alunos$cotista,]
alunos[!alunos$cotista,]
aluos
alunos
alunos[c(1,2),]
alunos[c(T,T,F,F),]
alunos$notas > 5
alunos[alunos$notas > 5,]
alunos[notas > 5,]
notas > 5
mtcars
mpg > 20
mtcars$mpg > 20
0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/33
2+3+3+2+1+2+1+1+2+2+1+1+1+1+1+2+10
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/36
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/36
teste <- read.table("https://github.com/cursoRunb/curso_r_2016/blob/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
teste
teste <- read.table("https://github.com/cursoRunb/curso_r_2016/blob/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
teste <- read.table("https://raw.githubusercontent.com/cursoRunb/curso_r_2016/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
head(teste)
summary(teste)
data
##Exemplo de quadrado latino montgomery
tabela <- matrix(c(24,20,19,24,24,
17,24,30,27,36,
18,38,26,27,21,
26,31,26,23,22,
22,30,20,29,31), ncol=5,byrow = T)
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
summary(modelo)
medoperador <- tapply(y,operador,mean)
medtrat <- tapply(y,trat,mean)
medlote <- tapply(y,lote,mean)
sum(5*(medoperador-mean(y))^2)
sum(5*(mdetrat-mean(y))^2)
sum(5*(medtrat-mean(y))^2)
sum(5*(medlote-mean(y))^2)
primeira <- letters[1:5]
segunda <- c(letters[2:5],"a")
terceira <- c(letters[3:5],"a","b")
quarta <- c("d","e",letters[1:3])
quinta <-c("e",letters[1:4])
matriz <- matrix(c(primeira,segunda,terceira,quarta,quinta),byrow=T,nrow=5)
matriz
sample(1:5)
matriz[sample(1:5),sample(1:5)]
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
tabela
tabela <- matrix(c(24,20,19,24,24,
17,24,30,27,36,
18,38,26,27,21,
26,31,26,23,22,
22,30,20,29,31), ncol=5,byrow = T)
tabela
colnames(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
summary(modelo)
mod2 <- aov(y~lote+trat+operador)
summary(mod2)
medoperador <- tapply(y,operador,mean)
medtrat <- tapply(y,trat,mean)
medlote <- tapply(y,lote,mean)
medtrat <- tapply(y,trat,mean)
AA <- c(24,36,27,26,30)
mean(AA)
medtrat
medoperador
rowMeans(tabela)
colMeans(tabela)
medlote
sum(5*(medoperador-mean(y))^2)
sum(5*(medtrat-mean(y))^2)
sum(5*(medlote-mean(y))^2)
summary(modelo)
sum((modelo$fitted.values-y)^2)
sum((y-mean(y))^2)
summary(modelo)[[1]][[2]]
sum(summary(modelo)[[1]][[2]])
summary(modelo)[[1]][2]
class(summary(modelo)[[1]][2])
class(summary(modelo)[[1]][[2]])
setwd("~/Dropbox/AAAUNB/Extensao/cursoRsegundo2016/disponibilizar/aula4")
