mat3+mat4
mat3 * mat4
mat3 %*% mat4
mat3 %*% mat4
mat1 < 1000
letters(9)
letters
letters[1:9]
matrix(letters[1:9],nrow=3)
matrix(c(letters[1:8],1000),nrow=3)
notas <- c(10,7,3,5)
nomes <- c("ana", "bia", "edu", "joao")
cotista <- c(T,F,T,F)
alunos <- data.frame(nomes,notas,cotista)
alunos
alunos[3,]
alunos[,2]
alunos$notas
alunos[,'notas']
alunos$nomes
?data.frame
alunos <- data.frame(nomes,notas,cotista,stringsAsFactors = FALSE)
alunos$nomes
sexo <- c("F","F","M","M")
alunos <- data.frame(nomes,notas,cotista,sexo)
alunos$se
alunos
alunos[,c(1,2)]
alunos[,c('nomes','notas')]
alunos[,c("nomes","notas")]
alunos$sexo
alunos$sexo$cotista
alunos
alunos[c(1,2,4,3), ]
order(alunos$notas,decreasing = T)
alunos[order(alunos$notas,decreasing = T), ]
alunos
alunos[c(1,3),]
alunos[c(T,F,T,F),]
alunos[alunos$cotista,]
alunos[!alunos$cotista,]
aluos
alunos
alunos[c(1,2),]
alunos[c(T,T,F,F),]
alunos$notas > 5
alunos[alunos$notas > 5,]
alunos[notas > 5,]
notas > 5
mtcars
mpg > 20
mtcars$mpg > 20
0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/33
2+3+3+2+1+2+1+1+2+2+1+1+1+1+1+2+10
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/36
(0+2/5*3+3+1+1+2+1+1+2+2/3*2+1+1+1+0+1+1/3*2+2+0+2+1)/36
teste <- read.table("https://github.com/cursoRunb/curso_r_2016/blob/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
teste
teste <- read.table("https://github.com/cursoRunb/curso_r_2016/blob/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
teste <- read.table("https://raw.githubusercontent.com/cursoRunb/curso_r_2016/master/aula3/dados/dadoscamarao.txt",head=T,dec=",")
head(teste)
summary(teste)
data
##Exemplo de quadrado latino montgomery
tabela <- matrix(c(24,20,19,24,24,
17,24,30,27,36,
18,38,26,27,21,
26,31,26,23,22,
22,30,20,29,31), ncol=5,byrow = T)
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
summary(modelo)
medoperador <- tapply(y,operador,mean)
medtrat <- tapply(y,trat,mean)
medlote <- tapply(y,lote,mean)
sum(5*(medoperador-mean(y))^2)
sum(5*(mdetrat-mean(y))^2)
sum(5*(medtrat-mean(y))^2)
sum(5*(medlote-mean(y))^2)
primeira <- letters[1:5]
segunda <- c(letters[2:5],"a")
terceira <- c(letters[3:5],"a","b")
quarta <- c("d","e",letters[1:3])
quinta <-c("e",letters[1:4])
matriz <- matrix(c(primeira,segunda,terceira,quarta,quinta),byrow=T,nrow=5)
matriz
sample(1:5)
matriz[sample(1:5),sample(1:5)]
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
tabela
tabela <- matrix(c(24,20,19,24,24,
17,24,30,27,36,
18,38,26,27,21,
26,31,26,23,22,
22,30,20,29,31), ncol=5,byrow = T)
tabela
colnames(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
y <- as.numeric(tabela)
trat <- factor(c("a","b","c","d","e",
"b","c","d","e","a",
"c","d","e","a","b",
"d","e","a","b","c",
"e","a","b","c","d"))
operador <- factor(rep(1:5,each=5))
lote <- factor(rep(1:5,5))
modelo <- aov(y~operador+lote+trat)
summary(modelo)
mod2 <- aov(y~lote+trat+operador)
summary(mod2)
medoperador <- tapply(y,operador,mean)
medtrat <- tapply(y,trat,mean)
medlote <- tapply(y,lote,mean)
medtrat <- tapply(y,trat,mean)
AA <- c(24,36,27,26,30)
mean(AA)
medtrat
medoperador
rowMeans(tabela)
colMeans(tabela)
medlote
sum(5*(medoperador-mean(y))^2)
sum(5*(medtrat-mean(y))^2)
sum(5*(medlote-mean(y))^2)
summary(modelo)
sum((modelo$fitted.values-y)^2)
sum((y-mean(y))^2)
summary(modelo)[[1]][[2]]
sum(summary(modelo)[[1]][[2]])
summary(modelo)[[1]][2]
class(summary(modelo)[[1]][2])
class(summary(modelo)[[1]][[2]])
USArrests
rownames(USArrests)
order(USArrests$Murder)
USArrests[c(34,19,29,15,45),]
order(USArrests$Murder)
order(USArrests$Murder)[c(1,2,3,4,5)]
order(USArrests$Murder)[1:5]
USArrests[order(USArrests$Murder)[1:5],]
estados <- USArrests[order(USArrests$Murder)[1:5],]
estados
order(USArrests$Murder)
1:5
c(1:5)
estados
estados$Murder
estados$Murder[1:3]
mean(estados$Murder[1:3])
media <- mean(estados$Murder[1:3])
meuvetor <- c(10,33,50)
meuvetor
meuvetor[1] <- 1000
meuvetor
vetor <- c(F,F,F,T,F)
which(vetor)
rownames(USArrests)
rownames(USArrests) == "Delaware"
which(rownames(USArrests) == "Delaware")
which(! (rownames(USArrests) == "Delaware"))
which( (rownames(USArrests) == "Delaware"))
desvios <- USArrests - mean(USArrests)
desvios <- USArrests$Murder - mean(USArrests$Murder)
desvios
USArrests$UrbanPop<50
sum(USArrests$UrbanPop<50)
USArrests[USArrests$UrbanPop<50,]
nrow(USArrests[USArrests$UrbanPop<50,])
USArrests$UrbanPop[USArrests$UrbanPop<50]
length(USArrests$UrbanPop[USArrests$UrbanPop<50])
ncol(USArrests)
dim(USArrests)
estados
write.table(estados,"arquivo1.txt")
getwd()
write.csv(estados,"arquivo2")
estados$crime <- estados$Murder+estados$Assault+estados$Rape
estados
estados$novo <- c(100,200,300,400,500)
estados
estados[6,] <- c(3,70,70,3.5,36,700)
estados
rownames(estados)
rownames(estados)[6] <- "Porto Rico"
estados
crimes <- USArrests$Murder + USArrests$Assault + USArrests$Rape
crimes
USArrests
nossosdados <- USArrests
nossosdados
nossosdados$total <- crimes
nossosdados
nossosdados$estelionato
nossosdados$estelionato<- 1
nossosdados
nossosdados <- nossosdados[,-6]
nossosdados
nossosdados <- nossosdados[,-"total"]
nossosdados <- nossosdados[,-c("total")]
nossosdados <- nossosdados[,c(T,T,T,T,F)]
nossosdados
USArrests[8,]
rownames(USArrests)
rownames(USArrests)=="Delaware"
which(rownames(USArrests)=="Delaware")
USArrests[which(rownames(USArrests)=="Delaware"),]
USArrests[which(rownames(USArrests)=="Delaware"),1]
USArrests[which(rownames(USArrests)=="Delaware"),1] <- USArrests[which(rownames(USArrests)=="Delaware"),1]*2
USArrests
rownames(USArrests)
row.names(USArrests)
rownames(USArrests)=="Delaware"
which(rownames(USArrests)=="Delaware")
USArrests[which(rownames(USArrests)=="Delaware"),1]
USArrests[which(rownames(USArrests)=="Delaware"),1] <- 999
USArrests
?read.table
vetor1 <- c(1,2,3,NA)
vetor1
sum(vetor1)
?sum
sum(vetor1,na.rm=T)
?mean
??glm
soma2 <- function(valor){
valor+2
}
soma2(1000)
varpop <- function(valores){
n<- length(valores)
media <- mean(valores)
desvios <- valores - media
sum(desvios^2)/n
}
varpop(USArrests$UrbanPop)
var(USArrests$UrbanPop)
varpop(USArrests$UrbanPop)
varpop <- function(valores){
n<- length(valores)
media <- mean(valores)
desvios <- valores - media
sum(desvios^2)/n
}
varpop(USArrests$UrbanPop)
??scott
install.packages("ScottKnott")
require(ScottKnott)
?ScottKnott
?SK
data(CRD2)
## From: design matrix (dm) and response variable (y)
sk1 <- with(CRD2,
SK(x=dm,
y=y,
model='y ~ x',
which='x'))
summary(sk1)
CRD2
?CRD2
head(CRD2)
?iris
head(iris)
head(iris)
SK(iris$Species,y=iris$Sepal.Length,model = y ~ x, which=x)
SK(x=iris$Species,y=iris$Sepal.Length,model = y ~ x, which=x)
SK(x=iris$Species,y=iris$Sepal.Length,model = y ~ x, which=iris$Species)
mod <- aov(iris$Sepal.Length ~ iris$Species)
SK(mod)
summary(SK(mod))
summary(mod)
summary(mod)
TukeyHSD(mod)
dados <- c( 8,14,14,17, 4,5,6,9, 5,6,9,3, 6,9,2,6)
length(dados)
bloc <- factor(rep(1:4,each=4))
trat <- factor(rep(1:4,4))
data.frame(dados,trat,bloc)
mod <- aov(dados~bloc+trat)
summary(mod)
boxplot(dados~trat)
TukeyHSD(mod,which = 'trat')
qqnorm(mod$residuals)
qqline(mod$residuals)
shapiro.test(mod$residuals)
plot(dados,trat)
plot(trat,dados)
plot(trat,bloc)
plot(trat~bloc)
boxplot(trat~bloc)
boxplot(bloc,dados)
bloc
plot(bloc,dados)
plot(trat,dados)
plot(bloc,dados)
plot(trat,mod$residuals)
plot(as.numeric(trat),mod$residuals)
soma2 <- function(valor){
valor + 2
}
order()
order
soma2 <- function(valor){
return(valor + 2)
}
2+2
soma2 <- function(valor){
2+2
soma2(1000)
soma2 <- function(valor){
return(valor + 2)
}
potencia(4,2)
potencia <- function(base,expoente){
base^expoente
}
potencia(4,2)
potencia <- function(base,expoente=2){
base^expoente
}
potencia(4)
potencia(2,3)
potencia(2+1,3)
potencia(1+1,3+2)
potencia(expoente=1+1,base=3+2)
potencia(2.5,3)
dados <- read.table(file.choose(),head=TRUE)
dados
dados$Ct
mean(dados$Ct)
dados <- read.table(file.choose(),head=TRUE,dec=",")
mean(dados$Ct)
dados
write.table(dados,"camaroesComVirgula")
getwd()
dados <- read.table(file.choose(),dec=",")
head(dados)
?write.table
write.table(dados,"/home/eduardo/Desktop/camaroesComVirgula")
getwd
getwd()
setwd("/home/eduardo/Desktop")
write.table(dados,file.choose())
write.table(dados,file.choose())
setwd("~/Dropbox/AAAUNB/Extensao/cursoRsegundo2016/disponibilizar/aula3/teste")
dir()
arquivos <- dir()
arquivos
dados1 <- read.table(arquivos[1],head=T,dec=",")
write.table(dados1,"dados1editado")
dados2 <- read.table(arquivos[2],head=T,dec=",")
write.table(dados1,"dados2editado")
nomesparasalvar <- c("arq1","arq2")
for(i in 1:2){
dados1 <- read.table(arquivos[i],head=T,dec=",")
write.table(dados1,nomesparasalvar[i])
}
length(dir())
numeroarquivos <- length(dir())
nomesparasalvar(paste("arquivo",1:numeroarquivos))
nomesparasalvar<-(paste("arquivo",1:numeroarquivos))
nomesparasalvar
nomesparasalvar<-(paste("arquivo",1:numeroarquivos,sep=""))
nomesparasalvar<-(paste("arquivo",1:numeroarquivos,sep=""))
nomesparasalvar
for(i in 1:length(dir())){
dados1 <- read.table(dir()[i],head=T,dec=",")
write.table(dados1,nomesparasalvar[i])
}
plot(186,85)
plot(c(186,160,170),c(85,70,75))
plot(c(186,160,170),c(85,70,75),
xlab = "Altura",ylab="Peso")
plot(c(186,160,170),c(85,70,75),
xlab = "Altura",ylab="Peso",
xlim=c(150,200))
plot(c(186,160,170),c(85,70,75),
xlab = "Altura",ylab="Peso",
xlim=c(150,200),ylim=c(50,100))
plot(c(186,160,170),c(85,70,75),
xlab = "Altura",ylab="Peso",
xlim=c(150,200),ylim=c(50,100),
col=c("blue","pink","blue"))
alturas <- c(186,160,170)
pesos <- c(85,70,75)
plot(alturas,pesos,
xlab = "Altura",ylab="Peso",
xlim=c(150,200),ylim=c(50,100),
col=c("blue","pink","blue"))
abline(h=mean(peso))
abline(h=mean(pesos))
abline(v=mean(alturas))
summary(lm(pesos~alturas))
abline(-23,.58)
abline(h=90)
plot(alturas,pesos,
xlab = "Altura",ylab="Peso",
xlim=c(150,200),ylim=c(50,100),
col=c("blue","pink","blue"))
abline(h=mean(pesos))
abline(v=mean(alturas))
summary(lm(pesos~alturas))
abline(-23,.58)
head(iris)
head(iris)
iris$Species
plot(iris$Sepal.Length,iris$Sepal.Width)
summary(lm(iris$Sepal.Width~iris$Sepal.Length))
abline(3.4,-.06)
abline(lm(iris$Sepal.Width~iris$Sepal.Length)$coefficients)
plot(iris$Sepal.Length,iris$Sepal.Width)
abline(lm(iris$Sepal.Width~iris$Sepal.Length)$coefficients)
plot(iris$Sepal.Length,iris$Sepal.Width)
mod1 <- lm(iris$Sepal.Width~iris$Sepal.Length)
abline(mod1$coefficients)
plot(iris)
methods(plot)
plot(mod1)
plot(iris$Sepal.Length,iris$Sepal.Width)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species)
plot(186,80,col=3)
plot(186,80,col=5)
plot(186,80,col=7)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species)
iris$Species
plot(186,80,col=7)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,pch=iris$Species)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,pch=as.numeric(iris$Species))
identify(iris$Sepal.Length,iris$Sepal.Width)
identify(iris$Sepal.Length,iris$Sepal.Width)
locator(1)
locator(1)
legend(6.5,4,,levels(iris$Species),fill=T,col=1:3)
legend(6.5,4,levels(iris$Species),fill=T,col=1:3)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,pch=as.numeric(iris$Species))
legend(6.5,4,levels(iris$Species),fill=c(1,2,3))
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,pch=as.numeric(iris$Species))
legend(6.5,6,levels(iris$Species),fill=c(1,2,3))
4
legend(6.5,4,levels(iris$Species),fill=c(1,2,3))
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,pch=as.numeric(iris$Species))
#identify(iris$Sepal.Length,iris$Sepal.Width)
#locator(1)
legend(6.5,4,c("tipo1","tipo2","tipo3"),fill=c(1,2,3))
legend(locator(1),c("tipo1","tipo2","tipo3"),fill=c(1,2,3))
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species)
summary(iris)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,xlim=c(0,8),ylim=c(0,8))
points(iris$Petal.Length,iris$Petal.Width,
col=iris$Species,pch=2)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
points(iris$Petal.Length,iris$Petal.Width,
col=iris$Species,pch=2)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
points(iris$Petal.Length,iris$Petal.Width,
col=iris$Species,pch=2)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
plot(iris$Petal.Length,iris$Petal.Width,
col=iris$Species,pch=2)
plot(iris$Sepal.Length,iris$Sepal.Width,
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
points(iris$Petal.Length,iris$Petal.Width,
col=iris$Species,pch=2)
plot(iris$Sepal.Length[1:20],iris$Sepal.Width[1:20],
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
iris$Species
plot(iris$Sepal.Length[iris$Species=="setosa"],iris$Sepal.Width[iris$Species=="setosa"],
col=iris$Species,xlim=c(0,8),ylim=c(0,6))
hist(iris$Sepal.Length)
boxplot(iris$Petal.Length~iris$Species)
pie(iris$Species)
pie(summary(iris$Species))
order()
order
mean
methods(plot())
methods(plot
)
plot.princomp
plot.princomp()
?plot.princomp
